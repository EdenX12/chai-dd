<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.api.mapper.SProductMapper">

    <select id="findProductDetailByProductName" resultType="java.util.Map">

        SELECT
        SP.id                                                   productId,          <!-- 商品ID -->
        SP.s_order											    sOrder,             <!-- 排序 -->
        SP.product_name                                         productName,        <!-- 商品名称 -->
        SP.product_des                                          productDes,         <!-- 商品简介 -->
        SP.product_img                                          productImg,         <!-- 商品图片 -->
        SP.product_price                                        productPrice,       <!-- 商品价格 -->
        SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
        SP.task_price                                           taskPrice,          <!-- 任务金 -->
        SP.task_number                                          taskNumber,         <!-- 任务数量 -->
        SP.total_reward                                         totalReward,        <!-- 总佣金 -->
        ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
        ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
        ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
        ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
        ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt           <!-- 关注人数 -->
        FROM s_product SP

        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        WHERE 1 = 1
        AND SP.product_name LIKE CONCAT('%',#{productName},'%')
        AND SP.delete_flag = 0
        AND SP.product_status = 1
        order  by  SP.s_order asc, sp.create_time desc
    </select>


    <select id="findNewProductDetail" resultType="java.util.Map">

        SELECT
        SP.id                                                   productId,          <!-- 商品ID -->
        SP.s_order											    sOrder,             <!-- 排序 -->
        SP.product_name                                         productName,        <!-- 商品名称 -->
        SP.product_des                                          productDes,         <!-- 商品简介 -->
        SP.product_img                                          productImg,         <!-- 商品图片 -->
        SP.product_price                                        productPrice,       <!-- 商品价格 -->
        SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
        SP.task_price                                           taskPrice,          <!-- 任务金 -->
        SP.task_number                                          taskNumber,         <!-- 任务数量 -->
        SP.total_reward                                         totalReward,        <!-- 总佣金 -->
        ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
        ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
        ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
        ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
        ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt           <!-- 关注人数 -->
        FROM s_product SP

        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        WHERE 1 = 1
        AND SP.product_type = 1
        AND SP.delete_flag = 0
        AND SP.product_status = 1
        order  by  SP.s_order asc, sp.create_time desc
    </select>

    <select id="findActivityProductDetail" resultType="java.util.Map">

        SELECT
        SP.id                                                   productId,          <!-- 商品ID -->
        SP.s_order											    sOrder,             <!-- 排序 -->
        SP.product_name                                         productName,        <!-- 商品名称 -->
        SP.product_des                                          productDes,         <!-- 商品简介 -->
        SP.product_img                                          productImg,         <!-- 商品图片 -->
        SP.product_price                                        productPrice,       <!-- 商品价格 -->
        SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
        SP.task_price                                           taskPrice,          <!-- 任务金 -->
        SP.task_number                                          taskNumber,         <!-- 任务数量 -->
        SP.total_reward                                         totalReward,        <!-- 总佣金 -->
        ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
        ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
        ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
        ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
        ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt           <!-- 关注人数 -->
        FROM s_activity SA
        LEFT JOIN s_activity_product SAP ON SAP.act_id= SA.id
        LEFT JOIN  s_product SP ON SP.id = SAP.product_id
        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        WHERE 1 = 1
        AND SA.id = #{activityId}
        AND SP.delete_flag = 0
        AND SP.product_status = 1
        order  by  SP.s_order asc, sp.create_time desc
    </select>

    <select id="findProductDetailBySmallTypeId" resultType="java.util.Map" parameterType="sProduct">

        SELECT
        SP.id                                                   productId,          <!-- 商品ID -->
        SP.s_order											    sOrder,             <!-- 排序 -->
        SP.product_name                                         productName,        <!-- 商品名称 -->
        SP.product_des                                          productDes,         <!-- 商品简介 -->
        SP.product_img                                          productImg,         <!-- 商品图片 -->
        SP.product_price                                        productPrice,       <!-- 商品价格 -->
        SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
        SP.task_price                                           taskPrice,          <!-- 任务金 -->
        SP.task_number                                          taskNumber,         <!-- 任务数量 -->
        SP.total_reward                                         totalReward,        <!-- 总佣金 -->
        ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
        ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
        ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
        ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
        ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt           <!-- 关注人数 -->
        FROM s_product SP

        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        WHERE 1 = 1

        <if test="sProduct.typeId != null and sProduct.typeId != ''">
            AND SP.type_id = #{sProduct.typeId}
        </if>

        <if test="sProduct.productType != null and sProduct.productType != ''">
            AND SP.product_type = #{sProduct.productType}
        </if>

        AND SP.delete_flag = 0
        AND SP.product_status = 1
        order  by  SP.s_order asc, sp.create_time desc
    </select>

    <select id="findProductDetailByBigTypeId" resultType="java.util.Map" parameterType="sProduct">

        SELECT
        SP.id                                                   productId,          <!-- 商品ID -->
        SP.s_order											    sOrder,             <!-- 排序 -->
        SP.product_name                                         productName,        <!-- 商品名称 -->
        SP.product_des                                          productDes,         <!-- 商品简介 -->
        SP.product_img                                          productImg,         <!-- 商品图片 -->
        SP.product_price                                        productPrice,       <!-- 商品价格 -->
        SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
        SP.task_price                                           taskPrice,          <!-- 任务金 -->
        SP.task_number                                          taskNumber,         <!-- 任务数量 -->
        SP.total_reward                                         totalReward,        <!-- 总佣金 -->
        ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
        ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
        ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
        ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
        ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt           <!-- 关注人数 -->
        FROM s_product_type SPT
        LEFT JOIN s_product SP ON SP.type_id = SPT.id AND SP.delete_flag = 0 AND SP.product_status = 1
        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        WHERE 1 = 1

        <if test="sProduct.typeId != null and sProduct.typeId != ''">
            AND SP.type_id = #{sProduct.typeId}
        </if>

        <if test="sProduct.productType != null and sProduct.productType != ''">
            AND SP.product_type = #{sProduct.productType}
        </if>
        order  by  SP.s_order asc, sp.create_time desc
    </select>

    <select id="findProductDetail" resultType="java.util.Map">

        SELECT
        SP.id                                                   productId,          <!-- 商品ID -->
        SP.shop_id                                              shopId,             <!-- 所属店铺ID -->
        SS.shop_name                                            shopName,           <!-- 所属店铺名称 -->
        SP.product_name                                         productName,        <!-- 商品名称 -->
        SP.product_des                                          productDes,         <!-- 商品简介 -->
        SP.product_img                                          productImg,         <!-- 商品图片 -->
        SP.product_detail                                       productDetail,      <!-- 商品详情 -->
        SP.product_price                                        productPrice,       <!-- 商品价格 -->
        SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
        SP.express_fee                                          expressFee,         <!-- 快递邮费 -->
        SP.task_price                                           taskPrice,          <!-- 任务金 -->
        SP.task_number                                          taskNumber,         <!-- 任务数量 -->
        SP.total_reward                                         totalReward,        <!-- 总佣金 -->
        ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
        ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
        ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
        ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
        ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt           <!-- 关注人数 -->
        FROM s_product SP
        LEFT JOIN s_shop SS
        ON SS.id = sp.shop_id
        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        WHERE 1 = 1
        AND SP.id = #{productId}
        AND SP.delete_flag = 0
    </select>

</mapper>
