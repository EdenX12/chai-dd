<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.api.mapper.SOfferPriceMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="cc.mrbird.febs.api.entity.SOfferPrice">
                <result column="id" property="id" />

                    <result column="amount" property="amount" />
                    <result column="status" property="status" />
                    <result column="task_order_id" property="taskOrderId" />
                    <result column="user_id" property="userId" />
                    <result column="pay_status" property="payStatus" />
                    <result column="pay_id" property="payId" />
            <result column="create_time" property="createTime" />
            <result column="update_time" property="updateTime" />
        </resultMap>

        <!-- 通用查询结果列 -->
        <sql id="Base_Column_List">
                id,
            create_time, amount, status, task_order_id, user_id, pay_status, pay_id
        </sql>


    <select id="findOfferPriceList" resultType="java.util.Map" parameterType="sOfferPrice">

        SELECT
        u.user_name userName,
        u.user_phone userPhone,
        o.amount amount,
        (CASE WHEN o.status = 1 THEN '领先' WHEN o.status = 2 THEN '出局' END) status
        FROM s_offer_price o
        LEFT JOIN s_user u ON o.user_id = u.id
        WHERE o.pay_status = 1
          AND o.task_order_id = #{sOfferPrice.taskOrderId}
        ORDER BY o.create_time desc

    </select>


    <select id="findOfferPriceDetail" resultType="java.util.Map" parameterType="sOfferPrice">

        SELECT

        o.create_time createTime,

        t.id taskId,
        t.user_id userId,
        t.product_id productId,
        t.task_number taskNumber,

        p.product_name productName,
        p.product_img productImg,
        p.product_des productDes,
        p.product_detail productDetail,
        p.task_number totalTaskNumber,
        t2.taskNumberOK taskNumberOK,
        p.product_price productPrice,
        p.total_reward totalReward,
        p.task_price taskPrice,
        p.price_unit priceUnit,
        p.success_reward successReward,
        p.every_reward everyReward,

        oc.offerCount offerCount,

        frontOffer.amount amount,
        frontOffer.status frontStatus,
        opu.user_name frontUserName,
        opu.user_phone frontUserPhone,

        lastOffer.amount amount,
        lastOffer.status lastStatus,

        u.user_name lastUserName,
        u.user_phone lastUserPhone

        FROM s_offer_price op

        LEFT JOIN s_task_order o ON o.id = op.task_order_id
        LEFT JOIN s_user_task t ON t.id = o.task_id
        LEFT JOIN s_product p ON p.id = t.product_id
        LEFT JOIN (SELECT product_id, SUM(task_number) taskNumberOK FROM s_user_task WHERE pay_status = 1 GROUP BY product_id) t2
        ON t2.product_id = p.id

        LEFT JOIN (SELECT task_order_id, count(*) offerCount FROM s_offer_price WHERE pay_status = 1 GROUP BY task_order_id) oc
        ON oc.task_order_id = o.id

        LEFT JOIN s_offer_price frontOffer ON frontOffer.task_order_id = o.id AND frontOffer.status IN (1, 3)
        LEFT JOIN s_user opu ON opu.id = frontOffer.user_id

        LEFT JOIN (select task_order_id, user_id, status, max(amount) from s_offer_price where pay_status = 1 group by task_order_id, user_id) lastOffer
        ON lastOffer.task_order_id = o.id AND lastOffer.user_id = op.user_id AND frontOffer.status IN (1, 2, 3)
        LEFT JOIN s_user u ON u.id = lastOffer.user_id

        WHERE op.pay_status = 1

        <if test="sOfferPrice.userId != null and sOfferPrice.userId != ''">
            AND op.user_id = #{sOfferPrice.userId}
        </if>

    </select>

</mapper>
