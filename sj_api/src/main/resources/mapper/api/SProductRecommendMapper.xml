<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.api.mapper.SProductRecommendMapper">

    <select id="findProductRecommendList" resultType="java.util.Map" parameterType="sProductRecommend">

        SELECT
            SP.id                                                   productId,          <!-- 商品ID -->
            SP.product_name                                         productName,        <!-- 商品名称 -->
		    SP.product_des                                          productDes,         <!-- 商品简介 -->
            SP.product_img                                          productImg,         <!-- 商品图片 -->
			SP.product_price                                        productPrice,       <!-- 商品价格 -->
			SP.scribing_price                                       scribingPrice,      <!-- 商品划线价 -->
			SP.task_price                                           taskPrice,          <!-- 任务金 -->
            SP.task_number                                          taskNumber,         <!-- 任务数量 -->
            SP.total_reward                                         totalReward,        <!-- 总佣金 -->
			ifnull(SP.total_number, 0) - ifnull(STL1.notOverCnt, 0) overTaskLineCnt,    <!-- 已完成任务线 -->
			ifnull(STL3.total_task, 0)                              totalTaskNumber,    <!-- 当前任务线份额 -->
			ifnull(STL3.received_task, 0)                           receivedTaskNumber, <!-- 已完成任务份额 -->
			ifnull(SUT.taskUserCnt, 0)                              taskUserCnt,        <!-- 拆家人数 -->
			ifnull(SUF.followCnt, 0) + ifnull(SUB.browserCnt, 0)    followCnt,          <!-- 关注人数 -->
            ifnull(SALE.productNumber, 0)                           saleCnt,            <!-- 已售件数 -->
            ifnull(reward.rewardCnt, 0)                             rewardCnt           <!-- 躺赢次数 -->

        FROM s_product_recommend SPR
        LEFT JOIN s_product SP
        ON SP.id = SPR.product_id
        LEFT JOIN (SELECT product_id, count(*) notOverCnt FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL1
        ON STL1.product_id = SP.id
        LEFT JOIN (SELECT product_id, MIN(line_order) AS minOrder FROM s_task_line WHERE line_status = 0 AND settle_status = 0 GROUP BY product_id) STL2
        ON STL2.product_id = SP.id
        LEFT JOIN s_task_line STL3
        ON STL3.product_id = STL2.product_id AND STL3.line_order = STL2.minOrder
        LEFT JOIN (SELECT product_id, count(*) taskUserCnt FROM (SELECT product_id, user_id FROM s_user_task WHERE pay_status = 1 group by product_id, user_id) temp GROUP BY product_id) SUT
        ON SUT.product_id = SP.id
        LEFT JOIN (select product_id, count(*) followCnt from s_user_follow where follow_type = 0 and status = 1 group by product_id) SUF
        ON SUF.product_id = SP.id
        LEFT JOIN (select product_id, count(*) browserCnt from s_user_browser group by product_id) SUB
        ON SUB.product_id = SP.id
        LEFT JOIN (select sop.product_id, sum(sop.product_number) productNumber from s_order_product sop inner join s_order_detail sod on sod.id = sop.order_detail_id where sod.payment_state in(1,9) group by sop.product_id) SALE
        ON SALE.product_id = SP.id
        LEFT JOIN (select product_id, count(*) rewardCnt from s_user_bonus_log where bonus_type in(2,3,4) group by product_id) reward
        ON reward.product_id = SP.id
        WHERE SPR.recommend_type_id = #{sProductRecommend.recommendTypeId}
        AND SPR.is_on_face = 1
        ORDER BY SPR.s_order ASC, SP.create_time DESC

    </select>

</mapper>
